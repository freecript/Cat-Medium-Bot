const { Telegraf, Markup  } = require('telegraf'); // Markup —É –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ Telegram-–±–æ—Ç—ñ–≤ (–æ—Å–æ–±–ª–∏–≤–æ –≤ –±—ñ–±–ª—ñ–æ—Ç–µ—Ü—ñ Telegraf) ‚Äî —Ü–µ —É—Ç–∏–ª—ñ—Ç–∞ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä —Ç–∞ —Ä–æ–∑–º—ñ—Ç–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
require("dotenv").config(); // –¥–ª—è —Ä–æ–±–æ—Ç–∏ ".env" , npm install dotenv  –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è dotenv 
/*
dotenv ‚Äî —Ü–µ –º–∞–ª–µ–Ω—å–∫–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ –¥–ª—è Node.js, —è–∫–∞ –¥–æ–ø–æ–º–∞–≥–∞—î –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —Å–µ–∫—Ä–µ—Ç–Ω—ñ –¥–∞–Ω—ñ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ —Ç–æ–∫–µ–Ω–∏, –ø–∞—Ä–æ–ª—ñ, –∫–ª—é—á—ñ) —É —Ñ–∞–π–ª—ñ .env, –∞ –Ω–µ –ø—Ä—è–º–æ –≤ –∫–æ–¥—ñ.
*/



const axios = require('axios'); // Axios ‚Äî  –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ API —Ç–∞ –∑–æ–≤–Ω—ñ—à–Ω—ñ–º–∏ —Å–µ—Ä–≤—ñ—Å–∞–º–∏



const bot = new Telegraf(process.env.BOT_TOKEN) // —Ç—É—Ç –∑–∞—Ö–æ–≤–∞–Ω–∏–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ —á–µ—Ä–µ–∑ process.env.

  

bot.start((ctx) => {
   const name = ctx.from.first_name ? ctx.from.first_name : '–î—Ä—É–∂–µ'; // –±–µ—Ä–µ–º–æ —ñ–º‚Äô—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ,—è–∫—â–æ —ñ–º–µ–Ω—ñ –Ω–µ–º–∞—î –±—É–¥–µ "–î—Ä—É–∂–µ"
    ctx.reply(`–ü—Ä–∏–≤—ñ—Ç, ${name} üòä! –•–æ—á–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—è —è–∫–∏–π –¥–µ–Ω—å —Ç–µ–±–µ —Å—å–æ–≥–æ–¥–Ω—ñ —á–µ–∫–∞—î ? üò∫`); // –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç —ñ–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–º –∑–≤–µ—Ä—Ç–∞–Ω–Ω—è–º 
  
    setTimeout(() => {
      const username = ctx.from.username ? '@' + ctx.from.username : '–î—Ä—É–∂–µ'; // —è–∫—â–æ –Ω–µ–º–∞—î –Ω—ñ–∫—É –≤ —Ç–µ–ª–µ–≥—Ä–∞–º—ñ –∑–≤–µ—Ä—Ç–∞—Ç–∏–º–µ—Ç—å—Å—è "–î—Ä—É–∂–µ"
      ctx.reply(
        `${username}, –æ–±–µ—Ä–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å:`, // –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –ø–æ –Ω—ñ–∫–Ω–µ–π–º—É , –≤ –æ–±–µ—Ä–Ω–µ–Ω–∏—Ö –ª–∞–ø–∫–∞—Ö
        Markup.inlineKeyboard([   // –∫–Ω–æ–ø–∫–∏ —á–µ—Ä–µ–∑ Markup
          Markup.callbackButton('üò∫ –•–æ—á—É', 'yes'),
          Markup.callbackButton('üôÄ –ù–µ —Ö–æ—á—É', 'no')
        ], {columns: 1}).extra()
      );
    }, 1000); //–∑–∞—Ç—Ä–∏–º–∫–∞ 1 —Å–µ–∫—É–Ω–¥–∞
  });


// –û–±—Ä–æ–±–∫–∞ "–•–æ—á—É"
const dailyFortunes = require('./fortunes'); // –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≥–Ω–æ–∑—ñ–≤

bot.action('yes', async (ctx) => {
  try {
    const res = await axios.get('https://api.thecatapi.com/v1/images/search');
    const imageUrl = res.data[0].url;

    const randomFortune = dailyFortunes[Math.floor(Math.random() * dailyFortunes.length)];

    await ctx.replyWithPhoto(imageUrl, { caption: randomFortune });
  } catch (err) {
    console.error(err);
    ctx.reply("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∫–æ—Ç–∏–∫–∞ üòø");
  }
});




// –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ "üôÄ –ù–µ —Ö–æ—á—É"

const fs = require('fs');
const path = require('path'); 
bot.action('no', (ctx) => {
  // —à–ª—è—Ö –¥–æ –ø–∞–ø–∫–∏ SadCat
  const folderPath = path.join(__dirname, 'SadCat');

  // —á–∏—Ç–∞—î–º–æ –≤—Å—ñ —Ñ–∞–π–ª–∏ –∑ –ø–∞–ø–∫–∏
  const files = fs.readdirSync(folderPath);

  // –≤–∏–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ–∞–π–ª
  const randomFile = files[Math.floor(Math.random() * files.length)];

  // —Ñ–æ—Ä–º—É—î–º–æ –ø–æ–≤–Ω–∏–π —à–ª—è—Ö
  const filePath = path.join(folderPath, randomFile);

  // –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–æ—Ç–æ –∑ –ø—ñ–¥–ø–∏—Å–æ–º
  ctx.replyWithPhoto({ source: filePath }, { caption: '–ó–ª—é–∫–∞ üòæ' });
});











bot.launch().then(() => {
    console.log('–±–æ—Ç –ø—Ä–∞—Ü—é—î')
})   // –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è , —â–æ–± –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞ –ø–∏—Å–∞–ª–æ "–±–æ—Ç –ø—Ä–∞—Ü—é—î".–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ "nodemon index.js"